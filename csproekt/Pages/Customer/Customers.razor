@page "/Customers"

<PageTitle>Customers</PageTitle>

<div class="table-container">
    <table class="table table-bordered">
        <thead>
        <tr>
            <th scope="col" class="table-cols" @onclick="OrderByID">ID</th>
            <th scope="col" class="table-cols" @onclick="OrderByName">Name</th>
            <th scope="col" class="table-cols" @onclick="OrderByAddress">Address</th>
            <th scope="col" class="table-cols" @onclick="OrderByPhone">Phone</th>
            <th scope="col">Actions</th>
        </tr>
        </thead>
        <tbody>
        @{
            foreach (var customer in _customers)
            {
                <tr>
                    <th scope="row">@customer.Id</th>
                    <td>@customer.Name</td>
                    <td>@customer.Address</td>
                    <td>@customer.Phone</td>
                    <td>
                        <div class="actions">
                            <a href="/customers/@customer.Id">
                                <div class="edit">
                                    <img src="assets/icons8-pencil-drawing-24.png" alt="Edit" title="Edit"/>
                                </div>
                            </a>
                            <div class="delete" @onclick="@(_ => DeleteCustomer(customer.Id))">
                                <img src="assets/icons8-multiply-24.png" alt="Delete" title="Delete"/>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        }
        <tr>
            <th scope="row">
                <input @bind="InputId" type="text" class="form-control edit-input" aria-label="Default" aria-describedby="inputGroup-sizing-default">
            </th>
            <td>
                <input @bind="InputName" type="text" class="form-control edit-input" aria-label="Default" aria-describedby="inputGroup-sizing-default">
            </td>
            <td>
                <input @bind="InputAddress" type="text" class="form-control edit-input" aria-label="Default" aria-describedby="inputGroup-sizing-default">

            </td>
            <td>
                <input @bind="InputPhone" type="text" class="form-control edit-input" aria-label="Default" aria-describedby="inputGroup-sizing-default">

            </td>
            <td>
                <div class="actions">
                    <div class="create" @onclick="CreateCustomer">
                        <img src="assets/icons8-tick-24.png" alt="Create" title="Create"/>
                    </div>
                </div>
            </td>
        </tr>
        </tbody>
    </table>
</div>

@code {
    private List<Customer>? _customers;
    private string criteria = "id";

    private string InputId { get; set; }
    private string InputName { get; set; }
    private string InputAddress { get; set; }
    private string InputPhone { get; set; }

    protected override void OnInitialized()
    {
        using var context = new ProjectContext();
        _customers = context.Customers.ToList();
    }

    private void DeleteCustomer(string customerId)
    {
        using var context = new ProjectContext();
        context.Customers.Remove(new Customer {Id = customerId});
        context.SaveChanges();
        _customers = context.Customers.ToList();
    }

    private void CreateCustomer()
    {
        using var context = new ProjectContext();
        var newCustomer = new Customer {Id = InputId, Address = InputAddress, Name = InputName, Phone = InputPhone};
        context.Customers.Add(newCustomer);
        context.SaveChanges();
        _customers = context.Customers.ToList();
        InputAddress = InputId = InputName = InputPhone = "";
    }

    private void OrderByID()
    {
        if (criteria == "id")
            _customers.Reverse();
        else
        {
            criteria = "id";
            _customers = _customers.OrderBy(c => c.Id).ToList();
        }
    }

    private void OrderByName()
    {
        if (criteria == "name")
            _customers.Reverse();
        else
        {
            criteria = "name";
            _customers = _customers.OrderBy(c => c.Name).ToList();
        }
    }

    private void OrderByAddress()
    {
        if (criteria == "address")
            _customers.Reverse();
        else
        {
            criteria = "address";
            _customers = _customers.OrderBy(c => c.Address).ToList();
        }
    }

    private void OrderByPhone()
    {
        if (criteria == "phone")
            _customers.Reverse();
        else
        {
            criteria = "phone";
            _customers = _customers.OrderBy(c => c.Phone).ToList();
        }
    }

}